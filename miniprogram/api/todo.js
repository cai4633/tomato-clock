import { http } from './http';
var AV = getApp().globalData.AV;
var getTodoList = function () {
    return new AV.Query('Todos').descending('createdAt')
        .find()
        .then(function (todos) {
        return todos.map(function (todo) { return todo.toJSON(); });
    })
        .catch(console.error);
};
var createTodoItem = function (object, description) {
    var todos = new object();
    todos.set('id', Math.random() * 100000 | 0);
    todos.set('completed', false);
    todos.set('description', description);
    return todos.save().then(function (res) { return res.toJSON(); });
};
var deleteTodoItem = function (id) {
    var todo = AV.Object.createWithoutData('Todos', id);
    todo.set('completed', true);
    return todo.save().then(function (res) { return res.toJSON(); });
};
var updateTodoItem = function (id, description) {
    var todo = AV.Object.createWithoutData('Todos', id);
    todo.set('description', description);
    return todo.save().then(function (res) { return res.toJSON(); });
};
var createTomato = function () {
    return http.post('/tomatoes').then(function (res) {
        return res && typeof res.data === 'object' ? res.data.resource : [];
    });
};
var updateTomato = function (param) {
    var id = param.id, description = param.description, aborted = param.aborted;
    return http.put("/tomatoes/" + id, {
        description: description, aborted: aborted
    }).then(function (res) { return res && typeof res.data === 'object' ? res.data.resource : []; });
};
export { getTodoList, createTodoItem, deleteTodoItem, updateTodoItem, createTomato, updateTomato };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9kby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInRvZG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUV0QixJQUFBLDJCQUFFLENBQXdCO0FBQ2xDLElBQU0sV0FBVyxHQUFHO0lBQ2xCLE9BQU8sSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUM7U0FDakQsSUFBSSxFQUFFO1NBQ04sSUFBSSxDQUFDLFVBQUMsS0FBcUI7UUFDMUIsT0FBTyxLQUFLLENBQUMsR0FBRyxDQUFDLFVBQUMsSUFBSSxJQUFLLE9BQUEsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFiLENBQWEsQ0FBQyxDQUFBO0lBQzNDLENBQUMsQ0FBQztTQUNELEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDMUIsQ0FBQyxDQUFBO0FBRUQsSUFBTSxjQUFjLEdBQUcsVUFBQyxNQUFXLEVBQUUsV0FBbUI7SUFDdEQsSUFBTSxLQUFLLEdBQUcsSUFBSSxNQUFNLEVBQUUsQ0FBQTtJQUMxQixLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFBO0lBQzNDLEtBQUssQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLEtBQUssQ0FBQyxDQUFBO0lBQzdCLEtBQUssQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FBQyxDQUFBO0lBQ3JDLE9BQU8sS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFDLEdBQWlCLElBQUssT0FBQSxHQUFHLENBQUMsTUFBTSxFQUFFLEVBQVosQ0FBWSxDQUFDLENBQUE7QUFDL0QsQ0FBQyxDQUFBO0FBRUQsSUFBTSxjQUFjLEdBQUcsVUFBQyxFQUFVO0lBQ2hDLElBQU0sSUFBSSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3RELElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzVCLE9BQU8sSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFDLEdBQWlCLElBQUssT0FBQSxHQUFHLENBQUMsTUFBTSxFQUFFLEVBQVosQ0FBWSxDQUFDLENBQUM7QUFDL0QsQ0FBQyxDQUFBO0FBQ0QsSUFBTSxjQUFjLEdBQUcsVUFBQyxFQUFVLEVBQUUsV0FBbUI7SUFDckQsSUFBTSxJQUFJLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDdEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDckMsT0FBTyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQUMsR0FBaUIsSUFBSyxPQUFBLEdBQUcsQ0FBQyxNQUFNLEVBQUUsRUFBWixDQUFZLENBQUMsQ0FBQztBQUMvRCxDQUFDLENBQUE7QUFFRCxJQUFNLFlBQVksR0FBRztJQUNuQixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsR0FBRztRQUNyQyxPQUFPLEdBQUcsSUFBSSxPQUFPLEdBQUcsQ0FBQyxJQUFJLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFBO0lBQ3JFLENBQUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQyxDQUFBO0FBT0QsSUFBTSxZQUFZLEdBQUcsVUFBQyxLQUFnQjtJQUM1QixJQUFBLGFBQUUsRUFBRSwrQkFBVyxFQUFFLHVCQUFPLENBQVU7SUFDMUMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLGVBQWEsRUFBSSxFQUFFO1FBQ2pDLFdBQVcsYUFBQSxFQUFFLE9BQU8sU0FBQTtLQUNyQixDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUEsR0FBRyxJQUFJLE9BQUEsR0FBRyxJQUFJLE9BQU8sR0FBRyxDQUFDLElBQUksS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQTVELENBQTRELENBQUMsQ0FBQTtBQUM5RSxDQUFDLENBQUE7QUFDRCxPQUFPLEVBQUUsV0FBVyxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsY0FBYyxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRvZG9MaXN0SXRlbSB9IGZyb20gJy4uLy4uL3R5cGluZ3MvdHlwZXMvaW5kZXgnO1xyXG5pbXBvcnQgeyBodHRwIH0gZnJvbSAnLi9odHRwJztcclxuXHJcbmNvbnN0IHsgQVYgfSA9IGdldEFwcCgpLmdsb2JhbERhdGFcclxuY29uc3QgZ2V0VG9kb0xpc3QgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIG5ldyBBVi5RdWVyeSgnVG9kb3MnKS5kZXNjZW5kaW5nKCdjcmVhdGVkQXQnKVxyXG4gICAgLmZpbmQoKVxyXG4gICAgLnRoZW4oKHRvZG9zOiBUb2RvTGlzdEl0ZW1bXSkgPT4ge1xyXG4gICAgICByZXR1cm4gdG9kb3MubWFwKCh0b2RvKSA9PiB0b2RvLnRvSlNPTigpKVxyXG4gICAgfSlcclxuICAgIC5jYXRjaChjb25zb2xlLmVycm9yKTtcclxufVxyXG5cclxuY29uc3QgY3JlYXRlVG9kb0l0ZW0gPSAob2JqZWN0OiBhbnksIGRlc2NyaXB0aW9uOiBzdHJpbmcpID0+IHtcclxuICBjb25zdCB0b2RvcyA9IG5ldyBvYmplY3QoKVxyXG4gIHRvZG9zLnNldCgnaWQnLCBNYXRoLnJhbmRvbSgpICogMTAwMDAwIHwgMClcclxuICB0b2Rvcy5zZXQoJ2NvbXBsZXRlZCcsIGZhbHNlKVxyXG4gIHRvZG9zLnNldCgnZGVzY3JpcHRpb24nLCBkZXNjcmlwdGlvbilcclxuICByZXR1cm4gdG9kb3Muc2F2ZSgpLnRoZW4oKHJlczogVG9kb0xpc3RJdGVtKSA9PiByZXMudG9KU09OKCkpXHJcbn1cclxuXHJcbmNvbnN0IGRlbGV0ZVRvZG9JdGVtID0gKGlkOiBzdHJpbmcpID0+IHtcclxuICBjb25zdCB0b2RvID0gQVYuT2JqZWN0LmNyZWF0ZVdpdGhvdXREYXRhKCdUb2RvcycsIGlkKTtcclxuICB0b2RvLnNldCgnY29tcGxldGVkJywgdHJ1ZSk7XHJcbiAgcmV0dXJuIHRvZG8uc2F2ZSgpLnRoZW4oKHJlczogVG9kb0xpc3RJdGVtKSA9PiByZXMudG9KU09OKCkpO1xyXG59XHJcbmNvbnN0IHVwZGF0ZVRvZG9JdGVtID0gKGlkOiBzdHJpbmcsIGRlc2NyaXB0aW9uOiBzdHJpbmcpID0+IHtcclxuICBjb25zdCB0b2RvID0gQVYuT2JqZWN0LmNyZWF0ZVdpdGhvdXREYXRhKCdUb2RvcycsIGlkKTtcclxuICB0b2RvLnNldCgnZGVzY3JpcHRpb24nLCBkZXNjcmlwdGlvbik7XHJcbiAgcmV0dXJuIHRvZG8uc2F2ZSgpLnRoZW4oKHJlczogVG9kb0xpc3RJdGVtKSA9PiByZXMudG9KU09OKCkpO1xyXG59XHJcblxyXG5jb25zdCBjcmVhdGVUb21hdG8gPSAoKSA9PiB7XHJcbiAgcmV0dXJuIGh0dHAucG9zdCgnL3RvbWF0b2VzJykudGhlbigocmVzKSA9PiB7XHJcbiAgICByZXR1cm4gcmVzICYmIHR5cGVvZiByZXMuZGF0YSA9PT0gJ29iamVjdCcgPyByZXMuZGF0YS5yZXNvdXJjZSA6IFtdXHJcbiAgfSlcclxufVxyXG5cclxuaW50ZXJmYWNlIFBhcmFtVHlwZSB7XHJcbiAgaWQ6IG51bWJlclxyXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmdcclxuICBhYm9ydGVkOiBib29sZWFuXHJcbn1cclxuY29uc3QgdXBkYXRlVG9tYXRvID0gKHBhcmFtOiBQYXJhbVR5cGUpID0+IHtcclxuICBjb25zdCB7IGlkLCBkZXNjcmlwdGlvbiwgYWJvcnRlZCB9ID0gcGFyYW1cclxuICByZXR1cm4gaHR0cC5wdXQoYC90b21hdG9lcy8ke2lkfWAsIHtcclxuICAgIGRlc2NyaXB0aW9uLCBhYm9ydGVkXHJcbiAgfSkudGhlbihyZXMgPT4gcmVzICYmIHR5cGVvZiByZXMuZGF0YSA9PT0gJ29iamVjdCcgPyByZXMuZGF0YS5yZXNvdXJjZSA6IFtdKVxyXG59XHJcbmV4cG9ydCB7IGdldFRvZG9MaXN0LCBjcmVhdGVUb2RvSXRlbSwgZGVsZXRlVG9kb0l0ZW0sIHVwZGF0ZVRvZG9JdGVtLCBjcmVhdGVUb21hdG8sIHVwZGF0ZVRvbWF0byB9Il19